


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-serviceaccount

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: traefik-role

rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
      - middlewaretcps
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: traefik-role

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: traefik-role
subjects:
  - kind: ServiceAccount
    name: traefik-serviceaccount
    namespace: default

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
        name: traefik
    spec:
      #serviceAccountName: traefik-serviceaccount
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:25
        name: traefik
        ports:
          - name: web
            containerPort: 80
          - name: admin
            containerPort: 8080
          - name: tcpep
            containerPort: 8000
          - name: udpep
            containerPort: 9000
        args:
        - --tracing=false
        - --api
        - --api.dashboard
        - --accesslog=true
        #- --providers.kubernetesingress=True
        #- --providers.kubernetescrd
        #- --providers.kubernetescrd.namespaces=default
        - --tracing.instana.loglevel=DEBUG
        - --api.insecure=true
        - --entrypoints.web.address=:80
        - --entrypoints.tcpep.address=:8000
        - --entrypoints.udpep.address=:9000/udp
        - --tracing.instana=false
        #- --configFile=/etc/traefik/traefik-conf2.yml
        - --providers.file.filename=/etc/traefik/traefik-conf.yml
        volumeMounts:
        - name: traefik-conf
          mountPath: /etc/traefik/ 
      #  - name: traefik-logs
      #    mountPath: /logs/traefik
      volumes:
      - name: traefik-conf
        configMap: 
          name: traefik-conf
      #- name: traefik-logs
      #  hostPath:
      #    path: /home/cgarcia/Code/pods_service/logs
          #type: Directory




# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: myingressroute
#   namespace: default

# spec:
#   entryPoints:
#     - web
#   routes:
#   - match: PathPrefix(`/bar`)
#     kind: Rule
#     services:
#     - name: whoami
#       port: 80

# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRouteTCP
# metadata:
#   name: postgrestcp

# spec:
#   routes:                       # [2]
#   - match: HostSNI(`*`)         # [3]
#     services:                   # [7]
#     - name: foo                 # [8]
#       port: 80                # [9]
#       startTLS: postgres
